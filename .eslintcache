[{"D:\\webPractice\\react-star-db\\src\\index.js":"1","D:\\webPractice\\react-star-db\\src\\components\\app\\index.js":"2","D:\\webPractice\\react-star-db\\src\\components\\app\\app.js":"3","D:\\webPractice\\react-star-db\\src\\components\\people-page\\index.js":"4","D:\\webPractice\\react-star-db\\src\\services\\swapi-services.js":"5","D:\\webPractice\\react-star-db\\src\\components\\header\\index.js":"6","D:\\webPractice\\react-star-db\\src\\components\\error-indicator\\index.js":"7","D:\\webPractice\\react-star-db\\src\\components\\random-planet\\index.js":"8","D:\\webPractice\\react-star-db\\src\\components\\error-button\\index.js":"9","D:\\webPractice\\react-star-db\\src\\components\\item-list\\index.js":"10","D:\\webPractice\\react-star-db\\src\\components\\people-page\\people-page.js":"11","D:\\webPractice\\react-star-db\\src\\components\\random-planet\\random-planet.js":"12","D:\\webPractice\\react-star-db\\src\\components\\header\\header.js":"13","D:\\webPractice\\react-star-db\\src\\components\\error-button\\error-button.js":"14","D:\\webPractice\\react-star-db\\src\\components\\error-indicator\\error-indicator.js":"15","D:\\webPractice\\react-star-db\\src\\components\\item-list\\item-list.js":"16","D:\\webPractice\\react-star-db\\src\\components\\spinner\\index.js":"17","D:\\webPractice\\react-star-db\\src\\components\\spinner\\spinner.js":"18","D:\\webPractice\\react-star-db\\src\\components\\row\\index.js":"19","D:\\webPractice\\react-star-db\\src\\components\\row\\row.js":"20","D:\\webPractice\\react-star-db\\src\\components\\error-boundry\\index.js":"21","D:\\webPractice\\react-star-db\\src\\components\\error-boundry\\error-boundry.js":"22","D:\\webPractice\\react-star-db\\src\\components\\item-details\\index.js":"23","D:\\webPractice\\react-star-db\\src\\components\\item-details\\item-details.js":"24","D:\\webPractice\\react-star-db\\src\\components\\hoc-helper\\with-data.js":"25","D:\\webPractice\\react-star-db\\src\\components\\hoc-helper\\index.js":"26"},{"size":161,"mtime":1606410074202,"results":"27","hashOfConfig":"28"},{"size":47,"mtime":1606410042407,"results":"29","hashOfConfig":"28"},{"size":3206,"mtime":1606943697783,"results":"30","hashOfConfig":"28"},{"size":118,"mtime":1606851988673,"results":"31","hashOfConfig":"28"},{"size":2574,"mtime":1606854267815,"results":"32","hashOfConfig":"28"},{"size":56,"mtime":1606408398104,"results":"33","hashOfConfig":"28"},{"size":81,"mtime":1606490120756,"results":"34","hashOfConfig":"28"},{"size":75,"mtime":1606408398107,"results":"35","hashOfConfig":"28"},{"size":74,"mtime":1606747750394,"results":"36","hashOfConfig":"28"},{"size":63,"mtime":1606408398104,"results":"37","hashOfConfig":"28"},{"size":1035,"mtime":1606852071360,"results":"38","hashOfConfig":"28"},{"size":2490,"mtime":1606747750399,"results":"39","hashOfConfig":"28"},{"size":491,"mtime":1606425076950,"results":"40","hashOfConfig":"28"},{"size":461,"mtime":1606747750394,"results":"41","hashOfConfig":"28"},{"size":537,"mtime":1606491444156,"results":"42","hashOfConfig":"28"},{"size":725,"mtime":1606943520177,"results":"43","hashOfConfig":"28"},{"size":59,"mtime":1606489168788,"results":"44","hashOfConfig":"28"},{"size":316,"mtime":1606599666392,"results":"45","hashOfConfig":"28"},{"size":49,"mtime":1606843652212,"results":"46","hashOfConfig":"28"},{"size":306,"mtime":1606843652219,"results":"47","hashOfConfig":"28"},{"size":77,"mtime":1606845706833,"results":"48","hashOfConfig":"28"},{"size":427,"mtime":1606845706786,"results":"49","hashOfConfig":"28"},{"size":72,"mtime":1606924707806,"results":"50","hashOfConfig":"28"},{"size":2659,"mtime":1606932642803,"results":"51","hashOfConfig":"28"},{"size":672,"mtime":1606943597698,"results":"52","hashOfConfig":"28"},{"size":65,"mtime":1606941962230,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"17596y1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\webPractice\\react-star-db\\src\\index.js",[],["111","112"],"D:\\webPractice\\react-star-db\\src\\components\\app\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\app\\app.js",["113","114","115"],"D:\\webPractice\\react-star-db\\src\\components\\people-page\\index.js",[],"D:\\webPractice\\react-star-db\\src\\services\\swapi-services.js",[],"D:\\webPractice\\react-star-db\\src\\components\\header\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\error-indicator\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\random-planet\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\error-button\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\item-list\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\people-page\\people-page.js",[],"D:\\webPractice\\react-star-db\\src\\components\\random-planet\\random-planet.js",["116"],"import React, {Component} from 'react';\r\n\r\nimport SwapiService from '../../services/swapi-services';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport Spinner from '../spinner';\r\n\r\nimport './random-planet.css';\r\n\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updadePlanet()\r\n    this.interval = setInterval(this.updadePlanet, 10000);\r\n    console.log('componentDidMount()');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n   clearInterval(this.interval);\r\n   console.log('componentWillUnmount()');\r\n  }\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({\r\n      planet,\r\n      loading: false,\r\n      error: false\r\n    });\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  updadePlanet = () => {\r\n    // const id = 20;\r\n    const id = Math.floor(Math.random() * 25) + 3;\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  render(){\r\n    \r\n    const { planet, loading, error } = this.state;\r\n    \r\n    const hasData = !(loading || error);\r\n\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <PlanetView planet={planet}/> : null;\r\n    \r\n\r\n\r\n    return(\r\n      <div className=\"random-planet jumbotron rounded\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\nconst PlanetView = ({planet}) => {\r\n\r\n  const { id, name, population, rotationPeriod, diameter } = planet;\r\n  return (\r\n    <React.Fragment>\r\n      <img className=\"planet-image\"\r\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Population</span>\r\n              <span>{population}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Rotation Period</span>\r\n              <span>{rotationPeriod}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Diameter</span>\r\n              <span>{diameter}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\webPractice\\react-star-db\\src\\components\\header\\header.js",["117","118","119","120"],"import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header d-flex\">\r\n      <h3>\r\n        <a href=\"#\">\r\n          StarDB\r\n        </a>\r\n      </h3>\r\n      <ul className=\"d-flex\">\r\n        <li>\r\n          <a href=\"#\">People</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Planets</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Starships</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","D:\\webPractice\\react-star-db\\src\\components\\error-button\\error-button.js",[],"D:\\webPractice\\react-star-db\\src\\components\\error-indicator\\error-indicator.js",[],"D:\\webPractice\\react-star-db\\src\\components\\item-list\\item-list.js",[],"D:\\webPractice\\react-star-db\\src\\components\\spinner\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\spinner\\spinner.js",[],"D:\\webPractice\\react-star-db\\src\\components\\row\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\row\\row.js",[],"D:\\webPractice\\react-star-db\\src\\components\\error-boundry\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\error-boundry\\error-boundry.js",[],["121","122"],"D:\\webPractice\\react-star-db\\src\\components\\item-details\\index.js",[],"D:\\webPractice\\react-star-db\\src\\components\\item-details\\item-details.js",["123","124","125","126","127","128"],"\r\nimport React, {Component} from 'react';\r\n\r\nimport SwapiService from '../../services/swapi-services';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport ErrorButton from '../error-button';\r\n\r\nimport './item-details.css';\r\n\r\nconst Record = ({ item, field, label}) => {\r\n  console.log(item);\r\n  return(\r\n    <li className=\"list-group-item\">\r\n      <span className=\"term\">{label}</span>\r\n      <span>{item[field]}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport {\r\n  Record\r\n};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    item: null,\r\n    loading: true,\r\n    error: false,\r\n    image: null\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.updateItem();\r\n    }\r\n  }\r\n\r\n  updateItem(){\r\n    const { itemId, getData, getImageUrl } = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n\r\n    getData(itemId)\r\n      .then( (item) => {\r\n        this.setState({\r\n          item,\r\n          loading: false,\r\n          image: getImageUrl(item)\r\n        })\r\n      })\r\n      .catch(this.onError);\r\n  }\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render(){\r\n\r\n    const { item, loading, error, image } = this.state;\r\n    \r\n    const hasData = !(loading || error);\r\n\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <ItemView item={item} image={image} props={this.props.children}/> : null;\r\n    const errorbutton = <ErrorButton />\r\n\r\n    if(!item) {\r\n      return <span>Select a item from a list</span>\r\n    }\r\n\r\n\r\n    return(\r\n      <div className=\"item-details card\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n        {errorbutton}\r\n      </div>\r\n\r\n    );\r\n  }\r\n};\r\n\r\nconst ItemView = ({item, image, props}) => {\r\n\r\n  const { id, name, height, gender, birthYear, eyeColor } = item\r\n  const images = image\r\n\r\n  const propsItemDetails = props\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <img className=\"item-image\"\r\n          src={images}/>\r\n\r\n\r\n        <div className=\"card-body\">\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            { \r\n              \r\n              React.Children.map(propsItemDetails, (child) => {\r\n                return React.cloneElement(child, { item });\r\n              })\r\n\r\n            }\r\n          </ul>\r\n        </div>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\webPractice\\react-star-db\\src\\components\\hoc-helper\\with-data.js",[],"D:\\webPractice\\react-star-db\\src\\components\\hoc-helper\\index.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":20},{"ruleId":"133","severity":1,"message":"137","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":18},{"ruleId":"133","severity":1,"message":"138","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":82,"column":7,"nodeType":"141","endLine":83,"endColumn":83},{"ruleId":"142","severity":1,"message":"143","line":9,"column":9,"nodeType":"141","endLine":9,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":15,"column":11,"nodeType":"141","endLine":15,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":18,"column":11,"nodeType":"141","endLine":18,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":21,"column":11,"nodeType":"141","endLine":21,"endColumn":23},{"ruleId":"129","replacedBy":"144"},{"ruleId":"131","replacedBy":"145"},{"ruleId":"133","severity":1,"message":"146","line":104,"column":11,"nodeType":"135","messageId":"136","endLine":104,"endColumn":13},{"ruleId":"133","severity":1,"message":"147","line":104,"column":21,"nodeType":"135","messageId":"136","endLine":104,"endColumn":27},{"ruleId":"133","severity":1,"message":"148","line":104,"column":29,"nodeType":"135","messageId":"136","endLine":104,"endColumn":35},{"ruleId":"133","severity":1,"message":"149","line":104,"column":37,"nodeType":"135","messageId":"136","endLine":104,"endColumn":46},{"ruleId":"133","severity":1,"message":"150","line":104,"column":48,"nodeType":"135","messageId":"136","endLine":104,"endColumn":56},{"ruleId":"139","severity":1,"message":"140","line":111,"column":7,"nodeType":"141","endLine":112,"endColumn":25},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'RandomPlanet' is defined but never used.","Identifier","unusedVar","'PeoplePage' is defined but never used.","'ErrorButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["151"],["152"],"'id' is assigned a value but never used.","'height' is assigned a value but never used.","'gender' is assigned a value but never used.","'birthYear' is assigned a value but never used.","'eyeColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]